version: '3'

services:
  # See: https://blog.mikesir87.io/2019/08/running-traefik-on-worker-nodes-more-securely/
  # for details about the Docker socket proxy.
  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      SERVICES: 1
      TASKS: 1
      NETWORKS: 1
    networks:
      - internal
    deploy:
      placement:
        constraints:
          - node.role == manager

  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2
    env_file: ${PWD}/infra/traefik-forward-auth.env
    labels:
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181"

  traefik:
    image: traefik:v2.3
    command:
      - "--api=false"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.watch=true"
      - "--providers.docker.endpoint=tcp://docker-socket-proxy:2375"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=infra-network_public"
      - "--providers.file.filename=/traefik.yml"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.http.http.redirections.entryPoint.to=https"
      - "--entrypoints.http.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.https.http.tls.options=default@file"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/acme/acme.json"
    volumes:
      - acme-data:/acme
      - ${PWD}/infra/traefik.yml:/traefik.yml
    networks:
      - internal
      - infra-network_public
    healthcheck:
      test: ["CMD", "/traefik", "healthcheck"]
      interval: 60s
      timeout: 3s
      retries: 5
    deploy:
      placement:
        constraints:
          - node.role == worker

  portainer-agent:
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - portainer-agent
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
      restart_policy:
        condition: on-failure

  portainer:
    image: portainer/portainer-ce
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify --no-auth
    volumes:
      - portainer-data:/data
    networks:
      - portainer-agent
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)"
        - "traefik.http.routers.portainer.entrypoints=https"
        - "traefik.http.routers.portainer.tls=true"
        - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
        - "traefik.http.routers.portainer.middlewares=hsts@file"
        - "traefik.http.routers.portainer.middlewares=traefik-forward-auth"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"

networks:
  infra-network_public:
    external: true
  portainer-agent:
    internal: true
    attachable: true
  internal:
    internal: true

volumes:
  portainer-data:
  acme-data:
