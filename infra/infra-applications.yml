version: '3.8'

services:
  # See: https://blog.mikesir87.io/2019/08/running-traefik-on-worker-nodes-more-securely/
  # for details about the Docker socket proxy.
  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      SERVICES: 1
      TASKS: 1
      NETWORKS: 1
    networks:
      - internal
    deploy:
      placement:
        constraints: [node.role == manager]

  traefik:
    image: traefik:v2.5
    command:
      - "--global.checknewversion=false"
      - "--global.sendanonymoususage=false"
      - "--log.level=ERROR"
      - "--api.dashboard=true"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.http.http.redirections.entrypoint.to=https"
      - "--entrypoints.http.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.https.http.tls.certresolver=letsencrypt"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/acme.json"
      - "--providers.docker.endpoint=tcp://docker-socket-proxy:2375"
      - "--providers.docker.network=infra-network_public"
      - "--providers.docker.swarmmode=true"
      - "--providers.docker.watch=true"
      - "--providers.docker.exposedbydefault=false"
    volumes:
      - ./acme.json:/acme.json
    networks:
      - infra-network_public
      - internal
    ports:
      - "80:80"
      - "443:443"
    deploy:
      mode: global
      labels:
        - "traefik.enable=True"
        - "traefik.http.routers.api.rule=Host(`traefik.${DOMAIN}`)"
        - "traefik.http.routers.api.entrypoints=https"
        - "traefik.http.routers.api.service=api@internal"
        - "traefik.http.services.dummy.loadbalancer.server.port=666"
      placement:
        constraints: [node.role == manager]

  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2
    env_file: ./traefik-forward-auth.env
    labels:
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181"

  portainer-agent:
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - portainer_agent
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify
    volumes:
      - portainer_data:/data
    networks:
      - portainer_agent
      - infra-network_public
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=True"
        - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)"
        - "traefik.http.routers.portainer.entrypoints=https"
        - "traefik.http.routers.portainer.tls=True"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      placement:
        constraints: [node.role == manager]

networks:
  infra-network_public:
    external: true
  internal:
    internal: true
  portainer_agent:
    internal: true
    driver: overlay
    attachable: true

volumes:
  portainer_data:

